{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Players.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n \r\n\r\n useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n        try {\r\n          setLoading(true);\r\n          const response = await axios.get(\r\n            \"http://localhost:8080/api/v1/football-players\"\r\n          );\r\n          \r\n          const transformedData = response.data.map((player) => ({\r\n            id: player.playerId,\r\n            name: player.name,\r\n            club: player.clubName,\r\n            position: player.positions,\r\n            salary: player.salary,\r\n            ca: player.ca,\r\n            pa: player.pa,\r\n            age: player.age,\r\n            clubId:player.clubId,\r\n            \r\n          }));\r\n\r\n          setPlayers(transformedData); // Veriyi kaydediyoruz\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Error fetching players:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, [players.length]);\r\n useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId:player.clubId,\r\n          \r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n  \r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n  \r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = (player) => {\r\n    if (!favorites.some((fav) => fav.id === player.id)) {\r\n      setFavorites([...favorites, player]);\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n        \r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n         \r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n                  \r\n               >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                  \r\n                  {player.name}\r\n                  </Link>\r\n                   \r\n                 \r\n                </td>\r\n                {<td>\r\n                 \r\n\r\n                    \r\n                  <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                    {player.club}\r\n                  </Link>\r\n                  \r\n                  \r\n                </td>}\r\n\r\n\r\n                \r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\"; // Link ve useNavigate import edin\nimport \"./Players.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Players = ({\n  isLoggedIn\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [favorites, setFavorites] = useState([]);\n  const navigate = useNavigate(); // Yönlendirme için kullanacağız\n\n  const playersPerPage = 30;\n  const paginationGroupSize = 10;\n  useEffect(() => {\n    const storedPlayers = localStorage.getItem(\"players\");\n    if (storedPlayers) {\n      setPlayers(JSON.parse(storedPlayers));\n      setLoading(false);\n    } else {\n      const fetchPlayers = async () => {\n        setLoading(true);\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\n        const transformedData = response.data.map(player => ({\n          id: player.playerId,\n          name: player.name,\n          club: player.clubName,\n          position: player.positions,\n          salary: player.salary,\n          ca: player.ca,\n          pa: player.pa,\n          age: player.age,\n          clubId: player.clubId\n        }));\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\n        setPlayers(transformedData);\n        setLoading(false);\n      };\n      fetchPlayers();\n    }\n  }, []);\n  const indexOfLastPlayer = currentPage * playersPerPage;\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\n  const handleAddToFavorites = player => {\n    if (!isLoggedIn) {\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\n      return;\n    }\n    if (!favorites.some(fav => fav.id === player.id)) {\n      setFavorites([...favorites, player]);\n      // Burada ayrıca backend'e favori ekleme isteği de gönderebiliriz\n      // Örneğin axios ile POST isteği\n      axios.post(\"http://localhost:8080/api/v1/favourites\", {\n        userId: 1,\n        // Kullanıcı ID'sini buraya ekle\n        playerId: player.id\n      }).then(response => {\n        console.log(\"Favoriye ekleme başarılı:\", response.data);\n      }).catch(error => {\n        console.error(\"Favoriye ekleme hatası:\", error);\n      });\n    }\n  };\n  const totalPages = Math.ceil(players.length / playersPerPage);\n  const paginate = pageNumber => {\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\n  };\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\n  const goToPreviousGroup = () => {\n    const previousGroupStart = startPage - paginationGroupSize;\n    if (previousGroupStart > 0) {\n      setCurrentPage(previousGroupStart);\n    }\n  };\n  const goToNextGroup = () => {\n    const nextGroupStart = startPage + paginationGroupSize;\n    if (nextGroupStart <= totalPages) {\n      setCurrentPage(nextGroupStart);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"players-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"players-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Add Favourites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentPlayers.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"favorite-btn\",\n                onClick: () => handleAddToFavorites(player),\n                children: \"\\u2B50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/players/${player.id}`,\n                className: \"player-link\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/clubs/${player.clubId}`,\n                className: \"club-link\",\n                children: player.club\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(player.position) ? player.position.join(\", \") : player.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [player.salary, \"\\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.ca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.pa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToPreviousGroup,\n          disabled: currentPage <= paginationGroupSize,\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), Array.from({\n          length: endPage - startPage + 1\n        }, (_, i) => {\n          const pageNumber = startPage + i;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`,\n            onClick: () => paginate(pageNumber),\n            children: pageNumber\n          }, pageNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToNextGroup,\n          disabled: startPage + paginationGroupSize > totalPages,\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n};\n_s(Players, \"ZG83OWBQXIW48obe9J+Fk/kn8hw=\", false, function () {\n  return [useNavigate];\n});\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","jsxDEV","_jsxDEV","Players","isLoggedIn","_s","players","setPlayers","currentPage","setCurrentPage","loading","setLoading","favorites","setFavorites","navigate","playersPerPage","paginationGroupSize","storedPlayers","localStorage","getItem","JSON","parse","fetchPlayers","response","get","transformedData","data","map","player","id","playerId","name","club","clubName","position","positions","salary","ca","pa","age","clubId","setItem","stringify","indexOfLastPlayer","indexOfFirstPlayer","currentPlayers","slice","handleAddToFavorites","some","fav","post","userId","then","console","log","catch","error","totalPages","Math","ceil","length","paginate","pageNumber","currentPaginationGroup","floor","startPage","endPage","min","goToPreviousGroup","previousGroupStart","goToNextGroup","nextGroupStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","Array","isArray","join","disabled","from","_","i","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Players.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n \r\n\r\n useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n        try {\r\n          setLoading(true);\r\n          const response = await axios.get(\r\n            \"http://localhost:8080/api/v1/football-players\"\r\n          );\r\n          \r\n          const transformedData = response.data.map((player) => ({\r\n            id: player.playerId,\r\n            name: player.name,\r\n            club: player.clubName,\r\n            position: player.positions,\r\n            salary: player.salary,\r\n            ca: player.ca,\r\n            pa: player.pa,\r\n            age: player.age,\r\n            clubId:player.clubId,\r\n            \r\n          }));\r\n\r\n          setPlayers(transformedData); // Veriyi kaydediyoruz\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Error fetching players:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, [players.length]);\r\n useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId:player.clubId,\r\n          \r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n  \r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n  \r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = (player) => {\r\n    if (!favorites.some((fav) => fav.id === player.id)) {\r\n      setFavorites([...favorites, player]);\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n        \r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n         \r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n                  \r\n               >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                  \r\n                  {player.name}\r\n                  </Link>\r\n                   \r\n                 \r\n                </td>\r\n                {<td>\r\n                 \r\n\r\n                    \r\n                  <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                    {player.club}\r\n                  </Link>\r\n                  \r\n                  \r\n                </td>}\r\n\r\n\r\n                \r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\"; // Link ve useNavigate import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Players = ({ isLoggedIn }) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const navigate = useNavigate(); // Yönlendirme için kullanacağız\r\n\r\n  const playersPerPage = 30; \r\n  const paginationGroupSize = 10;\r\n\r\n  useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId: player.clubId,\r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n\r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = (player) => {\r\n    if (!isLoggedIn) {\r\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\r\n      return;\r\n    }\r\n\r\n    if (!favorites.some((fav) => fav.id === player.id)) {\r\n      setFavorites([...favorites, player]);\r\n      // Burada ayrıca backend'e favori ekleme isteği de gönderebiliriz\r\n      // Örneğin axios ile POST isteği\r\n      axios.post(\"http://localhost:8080/api/v1/favourites\", {\r\n        userId: 1, // Kullanıcı ID'sini buraya ekle\r\n        playerId: player.id,\r\n      }).then(response => {\r\n        console.log(\"Favoriye ekleme başarılı:\", response.data);\r\n      }).catch(error => {\r\n        console.error(\"Favoriye ekleme hatası:\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n        {/* Diğer filtreler buraya eklenecek */}\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                    {player.name}\r\n                  </Link>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                    {player.club}\r\n                  </Link>\r\n                </td>\r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}