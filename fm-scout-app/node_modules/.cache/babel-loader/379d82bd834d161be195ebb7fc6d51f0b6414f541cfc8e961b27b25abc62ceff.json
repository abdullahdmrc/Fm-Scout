{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Players.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  \r\n\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n\r\n  const taken = localStorage.getItem(\"userId\");\r\n  //const userId=Number(localStorage.getItem(\"userId\"));\r\n\r\n\r\n  useEffect(() => {\r\n     const fetchPlayers = async () => {\r\n       if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n         try {\r\n           setLoading(true);\r\n           const response = await axios.get(\r\n             \"http://localhost:8080/api/v1/football-players\"\r\n           );\r\n           \r\n           const transformedData = response.data.map((player) => ({\r\n             id: player.playerId,\r\n             name: player.name,\r\n             club: player.clubName,\r\n             position: player.positions,\r\n             salary: player.salary,\r\n             ca: player.ca,\r\n             pa: player.pa,\r\n             age: player.age,\r\n             clubId:player.clubId,\r\n             \r\n           }));\r\n \r\n           setPlayers(transformedData); // Veriyi kaydediyoruz\r\n           setLoading(false);\r\n         } catch (error) {\r\n           console.error(\"Error fetching players:\", error);\r\n           setLoading(false);\r\n         }\r\n       }\r\n     };\r\n \r\n     fetchPlayers();\r\n   }, [players.length]);\r\n  useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId: player.clubId,\r\n\r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n\r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n\r\n  const handleAddToFavorites = async (player) => {\r\n    if (taken === null) {\r\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userId = Number(localStorage.getItem(\"userId\")); // Giriş yapan kullanıcının ID'sini al\r\n\r\n      // Eğer player zaten favorilerde yoksa, favoriye ekleyelim\r\n      if (!favorites.some((fav) => fav.id === player.id)) {\r\n        setFavorites([...favorites, player]);\r\n\r\n        // Backend'e favori eklemek için POST isteği\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/v1/favourites?userId=${userId}&playerId=${player.id}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          console.log(\"Favoriye ekleme başarılı!\");\r\n        } else {\r\n          console.error(\"Favoriye ekleme hatası:\", await response.text());\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Favoriye eklerken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2 style={{color:\"black\"}}>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n\r\n              >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n\r\n                    {player.name}\r\n                  </Link>\r\n\r\n\r\n                </td>\r\n                <td>\r\n                  {player.clubId ? (\r\n                    <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                      {player.club}\r\n                    </Link>\r\n                  ) : (\r\n                    <span>No Club</span>\r\n                  )}\r\n                </td>\r\n\r\n\r\n\r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Players.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Players = () => {\n  _s();\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\n  const [filteredPlayers, setFilteredPlayers] = useState([]); // Filtrelenmiş oyuncular\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\n  const [favorites, setFavorites] = useState([]); // Favoriler\n\n  const [filters, setFilters] = useState({\n    name: \"\",\n    club: \"\",\n    nationality: \"\",\n    league: \"\",\n    position: []\n  });\n  const navigate = useNavigate();\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\n  const paginationGroupSize = 10; // Pagination grubu\n\n  const taken = localStorage.getItem(\"userId\");\n  useEffect(() => {\n    const storedPlayers = localStorage.getItem(\"players\");\n    if (storedPlayers) {\n      const parsedPlayers = JSON.parse(storedPlayers);\n      setPlayers(parsedPlayers);\n      setFilteredPlayers(parsedPlayers);\n      setLoading(false);\n    } else {\n      const fetchPlayers = async () => {\n        setLoading(true);\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\n        const transformedData = response.data.map(player => ({\n          id: player.playerId,\n          name: player.name,\n          club: player.clubName,\n          position: player.positions,\n          salary: player.salary,\n          ca: player.ca,\n          pa: player.pa,\n          age: player.age,\n          clubId: player.clubId\n        }));\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\n        setPlayers(transformedData);\n        setFilteredPlayers(transformedData);\n        setLoading(false);\n      };\n      fetchPlayers();\n    }\n  }, []);\n  const applyFilters = () => {\n    let filtered = players;\n    if (filters.name) {\n      filtered = filtered.filter(player => player.name.toLowerCase().includes(filters.name.toLowerCase()));\n    }\n    if (filters.club) {\n      filtered = filtered.filter(player => player.club.toLowerCase().includes(filters.club.toLowerCase()));\n    }\n    if (filters.nationality) {\n      filtered = filtered.filter(player => {\n        var _player$nationality;\n        return (_player$nationality = player.nationality) === null || _player$nationality === void 0 ? void 0 : _player$nationality.toLowerCase().includes(filters.nationality.toLowerCase());\n      });\n    }\n    if (filters.league) {\n      filtered = filtered.filter(player => {\n        var _player$league;\n        return (_player$league = player.league) === null || _player$league === void 0 ? void 0 : _player$league.toLowerCase().includes(filters.league.toLowerCase());\n      });\n    }\n    if (filters.position.length > 0) {\n      filtered = filtered.filter(player => player.position.some(pos => filters.position.includes(pos)));\n    }\n    setFilteredPlayers(filtered);\n    setCurrentPage(1); // Sayfayı başa al\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === \"checkbox\") {\n      setFilters(prevFilters => {\n        const updatedPositions = checked ? [...prevFilters.position, value] : prevFilters.position.filter(pos => pos !== value);\n        return {\n          ...prevFilters,\n          position: updatedPositions\n        };\n      });\n    } else {\n      setFilters({\n        ...filters,\n        [name]: value\n      });\n    }\n  };\n  const indexOfLastPlayer = currentPage * playersPerPage;\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\n  const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\n  const handleAddToFavorites = async player => {\n    if (taken === null) {\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\n      return;\n    }\n    try {\n      const userId = Number(localStorage.getItem(\"userId\"));\n      if (!favorites.some(fav => fav.id === player.id)) {\n        setFavorites([...favorites, player]);\n        const response = await fetch(`http://localhost:8080/api/v1/favourites?userId=${userId}&playerId=${player.id}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          console.log(\"Favoriye ekleme başarılı!\");\n        } else {\n          console.error(\"Favoriye ekleme hatası:\", await response.text());\n        }\n      }\n    } catch (error) {\n      console.error(\"Favoriye eklerken bir hata oluştu:\", error);\n    }\n  };\n  const totalPages = Math.ceil(filteredPlayers.length / playersPerPage);\n  const paginate = pageNumber => {\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\n  };\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\n  const goToPreviousGroup = () => {\n    const previousGroupStart = startPage - paginationGroupSize;\n    if (previousGroupStart > 0) {\n      setCurrentPage(previousGroupStart);\n    }\n  };\n  const goToNextGroup = () => {\n    const nextGroupStart = startPage + paginationGroupSize;\n    if (nextGroupStart <= totalPages) {\n      setCurrentPage(nextGroupStart);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"players-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: filters.name,\n          onChange: handleFilterChange,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"club\",\n          children: \"Club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"club\",\n          name: \"club\",\n          value: filters.club,\n          onChange: handleFilterChange,\n          placeholder: \"Club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nationality\",\n          children: \"Nationality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nationality\",\n          name: \"nationality\",\n          value: filters.nationality,\n          onChange: handleFilterChange,\n          placeholder: \"Nationality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"league\",\n          children: \"League\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"league\",\n          name: \"league\",\n          value: filters.league,\n          onChange: handleFilterChange,\n          placeholder: \"League\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: [\"GK\", \"DL\", \"DC\", \"DR\", \"WBL\", \"WBR\", \"ML\", \"MC\", \"MR\", \"ST\"].map(pos => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: pos,\n            checked: filters.position.includes(pos),\n            onChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), pos]\n        }, pos, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"apply-filters-btn\",\n        onClick: applyFilters,\n        children: \"Apply Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"players-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Add Favourites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentPlayers.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"favorite-btn\",\n                onClick: () => handleAddToFavorites(player),\n                children: \"\\u2B50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/players/${player.id}`,\n                className: \"player-link\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.clubId ? /*#__PURE__*/_jsxDEV(Link, {\n                to: `/clubs/${player.clubId}`,\n                className: \"club-link\",\n                children: player.club\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Club\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(player.position) ? player.position.join(\", \") : player.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [player.salary, \"\\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.ca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.pa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToPreviousGroup,\n          disabled: currentPage <= paginationGroupSize,\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), Array.from({\n          length: endPage - startPage + 1\n        }, (_, i) => {\n          const pageNumber = startPage + i;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`,\n            onClick: () => paginate(pageNumber),\n            children: pageNumber\n          }, pageNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToNextGroup,\n          disabled: startPage + paginationGroupSize > totalPages,\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n};\n_s(Players, \"4KnG4/YKnLhZDFQuBcqEUJyCEms=\", false, function () {\n  return [useNavigate];\n});\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","useNavigate","jsxDEV","_jsxDEV","Players","_s","players","setPlayers","filteredPlayers","setFilteredPlayers","currentPage","setCurrentPage","loading","setLoading","favorites","setFavorites","filters","setFilters","name","club","nationality","league","position","navigate","playersPerPage","paginationGroupSize","taken","localStorage","getItem","storedPlayers","parsedPlayers","JSON","parse","fetchPlayers","response","get","transformedData","data","map","player","id","playerId","clubName","positions","salary","ca","pa","age","clubId","setItem","stringify","applyFilters","filtered","filter","toLowerCase","includes","_player$nationality","_player$league","length","some","pos","handleFilterChange","e","value","type","checked","target","prevFilters","updatedPositions","indexOfLastPlayer","indexOfFirstPlayer","currentPlayers","slice","handleAddToFavorites","userId","Number","fav","fetch","method","headers","ok","console","log","error","text","totalPages","Math","ceil","paginate","pageNumber","currentPaginationGroup","floor","startPage","endPage","min","goToPreviousGroup","previousGroupStart","goToNextGroup","nextGroupStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlFor","onChange","placeholder","onClick","to","Array","isArray","join","disabled","from","_","i","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Players.js"],"sourcesContent":["\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  \r\n\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n\r\n  const taken = localStorage.getItem(\"userId\");\r\n  //const userId=Number(localStorage.getItem(\"userId\"));\r\n\r\n\r\n  useEffect(() => {\r\n     const fetchPlayers = async () => {\r\n       if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n         try {\r\n           setLoading(true);\r\n           const response = await axios.get(\r\n             \"http://localhost:8080/api/v1/football-players\"\r\n           );\r\n           \r\n           const transformedData = response.data.map((player) => ({\r\n             id: player.playerId,\r\n             name: player.name,\r\n             club: player.clubName,\r\n             position: player.positions,\r\n             salary: player.salary,\r\n             ca: player.ca,\r\n             pa: player.pa,\r\n             age: player.age,\r\n             clubId:player.clubId,\r\n             \r\n           }));\r\n \r\n           setPlayers(transformedData); // Veriyi kaydediyoruz\r\n           setLoading(false);\r\n         } catch (error) {\r\n           console.error(\"Error fetching players:\", error);\r\n           setLoading(false);\r\n         }\r\n       }\r\n     };\r\n \r\n     fetchPlayers();\r\n   }, [players.length]);\r\n  useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId: player.clubId,\r\n\r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n\r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n\r\n  const handleAddToFavorites = async (player) => {\r\n    if (taken === null) {\r\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userId = Number(localStorage.getItem(\"userId\")); // Giriş yapan kullanıcının ID'sini al\r\n\r\n      // Eğer player zaten favorilerde yoksa, favoriye ekleyelim\r\n      if (!favorites.some((fav) => fav.id === player.id)) {\r\n        setFavorites([...favorites, player]);\r\n\r\n        // Backend'e favori eklemek için POST isteği\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/v1/favourites?userId=${userId}&playerId=${player.id}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          console.log(\"Favoriye ekleme başarılı!\");\r\n        } else {\r\n          console.error(\"Favoriye ekleme hatası:\", await response.text());\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Favoriye eklerken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2 style={{color:\"black\"}}>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n\r\n              >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n\r\n                    {player.name}\r\n                  </Link>\r\n\r\n\r\n                </td>\r\n                <td>\r\n                  {player.clubId ? (\r\n                    <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                      {player.club}\r\n                    </Link>\r\n                  ) : (\r\n                    <span>No Club</span>\r\n                  )}\r\n                </td>\r\n\r\n\r\n\r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [filteredPlayers, setFilteredPlayers] = useState([]); // Filtrelenmiş oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    club: \"\",\r\n    nationality: \"\",\r\n    league: \"\",\r\n    position: [],\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n\r\n  const taken = localStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      const parsedPlayers = JSON.parse(storedPlayers);\r\n      setPlayers(parsedPlayers);\r\n      setFilteredPlayers(parsedPlayers);\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId: player.clubId,\r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setFilteredPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n\r\n  const applyFilters = () => {\r\n    let filtered = players;\r\n\r\n    if (filters.name) {\r\n      filtered = filtered.filter((player) =>\r\n        player.name.toLowerCase().includes(filters.name.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (filters.club) {\r\n      filtered = filtered.filter((player) =>\r\n        player.club.toLowerCase().includes(filters.club.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (filters.nationality) {\r\n      filtered = filtered.filter((player) =>\r\n        player.nationality?.toLowerCase().includes(filters.nationality.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (filters.league) {\r\n      filtered = filtered.filter((player) =>\r\n        player.league?.toLowerCase().includes(filters.league.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (filters.position.length > 0) {\r\n      filtered = filtered.filter((player) =>\r\n        player.position.some((pos) => filters.position.includes(pos))\r\n      );\r\n    }\r\n\r\n    setFilteredPlayers(filtered);\r\n    setCurrentPage(1); // Sayfayı başa al\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === \"checkbox\") {\r\n      setFilters((prevFilters) => {\r\n        const updatedPositions = checked\r\n          ? [...prevFilters.position, value]\r\n          : prevFilters.position.filter((pos) => pos !== value);\r\n        return { ...prevFilters, position: updatedPositions };\r\n      });\r\n    } else {\r\n      setFilters({ ...filters, [name]: value });\r\n    }\r\n  };\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = async (player) => {\r\n    if (taken === null) {\r\n      navigate(\"/login\"); // Giriş yapmamışsa login sayfasına yönlendir\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userId = Number(localStorage.getItem(\"userId\"));\r\n\r\n      if (!favorites.some((fav) => fav.id === player.id)) {\r\n        setFavorites([...favorites, player]);\r\n\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/v1/favourites?userId=${userId}&playerId=${player.id}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          console.log(\"Favoriye ekleme başarılı!\");\r\n        } else {\r\n          console.error(\"Favoriye ekleme hatası:\", await response.text());\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Favoriye eklerken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(filteredPlayers.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2 style={{ color: \"black\" }}>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n            placeholder=\"Name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"club\"\r\n            name=\"club\"\r\n            value={filters.club}\r\n            onChange={handleFilterChange}\r\n            placeholder=\"Club\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nationality\"\r\n            name=\"nationality\"\r\n            value={filters.nationality}\r\n            onChange={handleFilterChange}\r\n            placeholder=\"Nationality\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"league\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n            placeholder=\"League\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          {[\"GK\", \"DL\", \"DC\", \"DR\", \"WBL\", \"WBR\", \"ML\", \"MC\", \"MR\", \"ST\"].map((pos) => (\r\n            <label key={pos}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={pos}\r\n                checked={filters.position.includes(pos)}\r\n                onChange={handleFilterChange}\r\n              />\r\n              {pos}\r\n            </label>\r\n          ))}\r\n        </div>\r\n\r\n        <button className=\"apply-filters-btn\" onClick={applyFilters}>\r\n          Apply Filters\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                    {player.name}\r\n                  </Link>\r\n                </td>\r\n                <td>\r\n                  {player.clubId ? (\r\n                    <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                      {player.club}\r\n                    </Link>\r\n                  ) : (\r\n                    <span>No Club</span>\r\n                  )}\r\n                </td>\r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}