{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Players.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n \r\n\r\n useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n        try {\r\n          setLoading(true);\r\n          const response = await axios.get(\r\n            \"http://localhost:8080/api/v1/football-players\"\r\n          );\r\n          \r\n          const transformedData = response.data.map((player) => ({\r\n            id: player.playerId,\r\n            name: player.name,\r\n            club: player.clubName,\r\n            position: player.positions,\r\n            salary: player.salary,\r\n            ca: player.ca,\r\n            pa: player.pa,\r\n            age: player.age,\r\n            clubId:player.clubId,\r\n            \r\n          }));\r\n\r\n          setPlayers(transformedData); // Veriyi kaydediyoruz\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Error fetching players:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, [players.length]);\r\n useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId:player.clubId,\r\n          \r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n  \r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n  \r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = (player) => {\r\n    if (!favorites.some((fav) => fav.id === player.id)) {\r\n      setFavorites([...favorites, player]);\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n        \r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n         \r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n                  \r\n               >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                  \r\n                  {player.name}\r\n                  </Link>\r\n                   \r\n                 \r\n                </td>\r\n                {<td>\r\n                 \r\n\r\n                    \r\n                  <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                    {player.club}\r\n                  </Link>\r\n                  \r\n                  \r\n                </td>}\r\n\r\n\r\n                \r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Players = () => {\n  _s();\n  const [allPlayers, setAllPlayers] = useState([]); // Tüm oyuncuları tutar\n  const [filteredPlayers, setFilteredPlayers] = useState([]); // Filtrelenmiş oyuncuları tutar\n  const [currentPage, setCurrentPage] = useState(0); // Mevcut sayfa\n  const [playersPerPage, setPlayersPerPage] = useState(30); // Sayfa başına oyuncu sayısı\n  const [filters, setFilters] = useState({\n    minAge: null,\n    maxAge: null,\n    clubName: \"\",\n    countryName: \"\",\n    leagueName: \"\",\n    positionIds: [],\n    minMarketValue: null,\n    maxMarketValue: null,\n    minCa: null,\n    maxCa: null,\n    minPa: null,\n    maxPa: null\n  });\n  useEffect(() => {\n    // Tüm veriyi backend'den çek\n    const fetchPlayers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\n        setAllPlayers(response.data); // Tüm veriyi kaydet\n        setFilteredPlayers(response.data); // Başlangıçta tüm veriyi filtrelenmiş olarak ayarla\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n      }\n    };\n    fetchPlayers();\n  }, []);\n\n  // Filtreleri uygula\n  const applyFilters = () => {\n    let filtered = allPlayers;\n    if (filters.minAge) {\n      filtered = filtered.filter(player => player.age >= filters.minAge);\n    }\n    if (filters.maxAge) {\n      filtered = filtered.filter(player => player.age <= filters.maxAge);\n    }\n    if (filters.clubName) {\n      filtered = filtered.filter(player => player.club.toLowerCase().includes(filters.clubName.toLowerCase()));\n    }\n    if (filters.countryName) {\n      filtered = filtered.filter(player => player.country.toLowerCase().includes(filters.countryName.toLowerCase()));\n    }\n    if (filters.leagueName) {\n      filtered = filtered.filter(player => player.league.toLowerCase().includes(filters.leagueName.toLowerCase()));\n    }\n    if (filters.positionIds.length > 0) {\n      filtered = filtered.filter(player => filters.positionIds.some(id => player.positionIds.includes(id)));\n    }\n    setFilteredPlayers(filtered);\n    setCurrentPage(0); // Yeni filtrelerde sayfayı sıfırla\n  };\n  useEffect(() => {\n    applyFilters();\n  }, [filters]); // Filtreler değiştiğinde yeniden uygula\n\n  // Sayfa değişimi\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Filtre değişimlerini yönet\n  const handleFilterChange = (key, value) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [key]: value\n    }));\n  };\n  const handleCheckboxChange = positionId => {\n    setFilters(prevFilters => {\n      const updatedPositions = prevFilters.positionIds.includes(positionId) ? prevFilters.positionIds.filter(id => id !== positionId) : [...prevFilters.positionIds, positionId];\n      return {\n        ...prevFilters,\n        positionIds: updatedPositions\n      };\n    });\n  };\n\n  // Sayfa başına oyuncuları hesapla\n  const indexOfFirstPlayer = currentPage * playersPerPage;\n  const indexOfLastPlayer = indexOfFirstPlayer + playersPerPage;\n  const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"players-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Min Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => handleFilterChange(\"minAge\", e.target.value || null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Max Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => handleFilterChange(\"maxAge\", e.target.value || null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Club Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => handleFilterChange(\"clubName\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCheckboxChange(1) // Örnek pozisyonId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), \"GK\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"players-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentPlayers.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.club\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.position.join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage - 1),\n          disabled: currentPage === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage + 1, \" of \", Math.ceil(filteredPlayers.length / playersPerPage)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          disabled: currentPage >= Math.ceil(filteredPlayers.length / playersPerPage) - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(Players, \"JkPBGt5HXdfw5JGyNPJ8xbdT0Vw=\");\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Players","_s","allPlayers","setAllPlayers","filteredPlayers","setFilteredPlayers","currentPage","setCurrentPage","playersPerPage","setPlayersPerPage","filters","setFilters","minAge","maxAge","clubName","countryName","leagueName","positionIds","minMarketValue","maxMarketValue","minCa","maxCa","minPa","maxPa","fetchPlayers","response","get","data","error","console","applyFilters","filtered","filter","player","age","club","toLowerCase","includes","country","league","length","some","id","handlePageChange","pageNumber","handleFilterChange","key","value","prevFilters","handleCheckboxChange","positionId","updatedPositions","indexOfFirstPlayer","indexOfLastPlayer","currentPlayers","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","name","position","join","onClick","disabled","Math","ceil","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Players.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link import edin\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]); // Tüm oyuncular\r\n  const [currentPage, setCurrentPage] = useState(1); // Geçerli sayfa\r\n  const [loading, setLoading] = useState(true); // Yüklenme durumu\r\n  const [favorites, setFavorites] = useState([]); // Favoriler\r\n\r\n  const playersPerPage = 30; // Her sayfada 30 oyuncu gösterilecek\r\n  const paginationGroupSize = 10; // Pagination grubu\r\n \r\n\r\n useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      if (players.length === 0) { // Eğer daha önce veri çekilmediyse\r\n        try {\r\n          setLoading(true);\r\n          const response = await axios.get(\r\n            \"http://localhost:8080/api/v1/football-players\"\r\n          );\r\n          \r\n          const transformedData = response.data.map((player) => ({\r\n            id: player.playerId,\r\n            name: player.name,\r\n            club: player.clubName,\r\n            position: player.positions,\r\n            salary: player.salary,\r\n            ca: player.ca,\r\n            pa: player.pa,\r\n            age: player.age,\r\n            clubId:player.clubId,\r\n            \r\n          }));\r\n\r\n          setPlayers(transformedData); // Veriyi kaydediyoruz\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Error fetching players:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, [players.length]);\r\n useEffect(() => {\r\n    const storedPlayers = localStorage.getItem(\"players\");\r\n    if (storedPlayers) {\r\n      setPlayers(JSON.parse(storedPlayers));\r\n      setLoading(false);\r\n    } else {\r\n      const fetchPlayers = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        const transformedData = response.data.map((player) => ({\r\n          id: player.playerId,\r\n          name: player.name,\r\n          club: player.clubName,\r\n          position: player.positions,\r\n          salary: player.salary,\r\n          ca: player.ca,\r\n          pa: player.pa,\r\n          age: player.age,\r\n          clubId:player.clubId,\r\n          \r\n        }));\r\n        localStorage.setItem(\"players\", JSON.stringify(transformedData));\r\n        setPlayers(transformedData);\r\n        setLoading(false);\r\n      };\r\n  \r\n      fetchPlayers();\r\n    }\r\n  }, []);\r\n  \r\n\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  const handleAddToFavorites = (player) => {\r\n    if (!favorites.some((fav) => fav.id === player.id)) {\r\n      setFavorites([...favorites, player]);\r\n    }\r\n  };\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Name\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"club\">Club</label>\r\n          <input type=\"text\" id=\"club\" placeholder=\"Club\" />\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"nationality\">Nationality</label>\r\n          <input type=\"text\" id=\"nationality\" placeholder=\"Nationality\" />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label htmlFor=\"league\">League</label>\r\n          <input type=\"text\" id=\"league\" placeholder=\"League\" />\r\n        </div>\r\n\r\n\r\n\r\n        \r\n\r\n        <div className=\"section-title\"><strong>Position</strong></div>\r\n        <div className=\"checkbox-group\">\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> GK\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> DR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBL\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> WBR\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> ML\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MC\r\n            </label>\r\n          </tr>\r\n          <tr>\r\n            <label>\r\n              <input type=\"checkbox\" /> MR\r\n            </label>\r\n          </tr>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Add Favourites</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>CA</th>\r\n              <th>PA</th>\r\n              <th>Age</th>\r\n            </tr>\r\n          </thead>\r\n         \r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}\r\n                  \r\n               >\r\n                <td>\r\n                  <button\r\n                    className=\"favorite-btn\"\r\n                    onClick={() => handleAddToFavorites(player)}\r\n                  >\r\n                    ⭐\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <Link to={`/players/${player.id}`} className=\"player-link\">\r\n                  \r\n                  {player.name}\r\n                  </Link>\r\n                   \r\n                 \r\n                </td>\r\n                {<td>\r\n                 \r\n\r\n                    \r\n                  <Link to={`/clubs/${player.clubId}`} className=\"club-link\">\r\n                    {player.club}\r\n                  </Link>\r\n                  \r\n                  \r\n                </td>}\r\n\r\n\r\n                \r\n                <td>{Array.isArray(player.position) ? player.position.join(\", \") : player.position}</td>\r\n\r\n                <td>{player.salary}€</td>\r\n                <td>{player.ca}</td>\r\n                <td>{player.pa}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Players = () => {\r\n  const [allPlayers, setAllPlayers] = useState([]); // Tüm oyuncuları tutar\r\n  const [filteredPlayers, setFilteredPlayers] = useState([]); // Filtrelenmiş oyuncuları tutar\r\n  const [currentPage, setCurrentPage] = useState(0); // Mevcut sayfa\r\n  const [playersPerPage, setPlayersPerPage] = useState(30); // Sayfa başına oyuncu sayısı\r\n  const [filters, setFilters] = useState({\r\n    minAge: null,\r\n    maxAge: null,\r\n    clubName: \"\",\r\n    countryName: \"\",\r\n    leagueName: \"\",\r\n    positionIds: [],\r\n    minMarketValue: null,\r\n    maxMarketValue: null,\r\n    minCa: null,\r\n    maxCa: null,\r\n    minPa: null,\r\n    maxPa: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Tüm veriyi backend'den çek\r\n    const fetchPlayers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n        setAllPlayers(response.data); // Tüm veriyi kaydet\r\n        setFilteredPlayers(response.data); // Başlangıçta tüm veriyi filtrelenmiş olarak ayarla\r\n      } catch (error) {\r\n        console.error(\"Error fetching players:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, []);\r\n\r\n  // Filtreleri uygula\r\n  const applyFilters = () => {\r\n    let filtered = allPlayers;\r\n\r\n    if (filters.minAge) {\r\n      filtered = filtered.filter((player) => player.age >= filters.minAge);\r\n    }\r\n    if (filters.maxAge) {\r\n      filtered = filtered.filter((player) => player.age <= filters.maxAge);\r\n    }\r\n    if (filters.clubName) {\r\n      filtered = filtered.filter((player) =>\r\n        player.club.toLowerCase().includes(filters.clubName.toLowerCase())\r\n      );\r\n    }\r\n    if (filters.countryName) {\r\n      filtered = filtered.filter((player) =>\r\n        player.country.toLowerCase().includes(filters.countryName.toLowerCase())\r\n      );\r\n    }\r\n    if (filters.leagueName) {\r\n      filtered = filtered.filter((player) =>\r\n        player.league.toLowerCase().includes(filters.leagueName.toLowerCase())\r\n      );\r\n    }\r\n    if (filters.positionIds.length > 0) {\r\n      filtered = filtered.filter((player) =>\r\n        filters.positionIds.some((id) => player.positionIds.includes(id))\r\n      );\r\n    }\r\n\r\n    setFilteredPlayers(filtered);\r\n    setCurrentPage(0); // Yeni filtrelerde sayfayı sıfırla\r\n  };\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [filters]); // Filtreler değiştiğinde yeniden uygula\r\n\r\n  // Sayfa değişimi\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Filtre değişimlerini yönet\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (positionId) => {\r\n    setFilters((prevFilters) => {\r\n      const updatedPositions = prevFilters.positionIds.includes(positionId)\r\n        ? prevFilters.positionIds.filter((id) => id !== positionId)\r\n        : [...prevFilters.positionIds, positionId];\r\n      return { ...prevFilters, positionIds: updatedPositions };\r\n    });\r\n  };\r\n\r\n  // Sayfa başına oyuncuları hesapla\r\n  const indexOfFirstPlayer = currentPage * playersPerPage;\r\n  const indexOfLastPlayer = indexOfFirstPlayer + playersPerPage;\r\n  const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n        <div className=\"filter-group\">\r\n          <label>Min Age:</label>\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => handleFilterChange(\"minAge\", e.target.value || null)}\r\n          />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Max Age:</label>\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => handleFilterChange(\"maxAge\", e.target.value || null)}\r\n          />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Club Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => handleFilterChange(\"clubName\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Position:</label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={() => handleCheckboxChange(1)} // Örnek pozisyonId\r\n            />\r\n            GK\r\n          </label>\r\n          {/* Daha fazla pozisyon ekleyebilirsiniz */}\r\n        </div>\r\n      </aside>\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Age</th>\r\n              {/* Diğer sütunlar */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>{player.name}</td>\r\n                <td>{player.club}</td>\r\n                <td>{player.position.join(\", \")}</td>\r\n                <td>{player.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination\">\r\n          <button\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 0}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span>\r\n            Page {currentPage + 1} of {Math.ceil(filteredPlayers.length / playersPerPage)}\r\n          </span>\r\n          <button\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage >= Math.ceil(filteredPlayers.length / playersPerPage) - 1}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}