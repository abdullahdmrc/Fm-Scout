{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Operations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Operations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Operations = () => {\n  _s();\n  const [entityType, setEntityType] = useState(\"\"); // İlk dropdown seçimi\n  const [operation, setOperation] = useState(\"\"); // İkinci dropdown seçimi\n  const [attributes, setAttributes] = useState({});\n  const [dataList, setDataList] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [editMode, setEditMode] = useState(false); // Flag to indicate if we are editing\n\n  // İlk dropdown seçenekleri\n  const entityOptions = [\"clubs\", \"football-players\", \"users\"];\n\n  // İkinci dropdown seçenekleri\n  const operationOptions = entityType === \"users\" ? [\"delete\"] : [\"insert\", \"delete\", \"update\"];\n\n  // İlk dropdown seçimi değiştiğinde her şeyi sıfırla\n  useEffect(() => {\n    setOperation(\"\");\n    setAttributes({});\n    setDataList([]);\n    setMessage(\"\");\n    setEditMode(false); //Reset Edit Mode when entity type changes\n  }, [entityType]);\n\n  // Operation seçiminde form resetlemesi\n  useEffect(() => {\n    if (operation === \"insert\" || operation === \"update\") {\n      setAttributes({});\n      setEditMode(false); // Reset edit mode when operation changes\n    }\n  }, [operation]);\n  const getIdField = entityType => {\n    if (entityType === \"clubs\") return \"clubId\";\n    if (entityType === \"football-players\") return \"playerId\";\n    if (entityType === \"users\") return \"userId\";\n    return \"id\"; // Varsayılan bir fallback\n  };\n\n  // Veriyi backend'den getirme\n  const fetchData = async () => {\n    try {\n      let response = null; // Başlangıç değeri\n\n      // entityType'a göre uygun endpoint'i belirliyoruz\n      if (entityType === \"users\") {\n        response = await axios.get(\"http://localhost:8080/api/v1/users/non-admins\");\n      } else if (entityType === \"clubs\") {\n        response = await axios.get(\"http://localhost:8080/api/v1/clubs\");\n      } else if (entityType === \"football-players\") {\n        response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\n      }\n      if (response) {\n        setDataList(response.data); // Gelen veriyi listeye ekliyoruz\n        setMessage(\"\"); // Başarılı istek sonrası mesajı temizliyoruz\n      } else {\n        setMessage(\"Invalid entity type selected.\");\n      }\n    } catch (error) {\n      setMessage(\"An error occurred while fetching data.\");\n      console.error(error);\n    }\n  };\n\n  // Backend'e veri gönderme (Insert, Update veya Delete)\n  const sendData = async (method, url, payload) => {\n    try {\n      if (method === \"delete\") {\n        await axios.delete(url);\n      } else {\n        await axios({\n          method,\n          url,\n          data: payload\n        });\n      }\n      setMessage(\"Successfully done!\");\n      fetchData(); // Operasyondan sonra veriyi güncelle\n      setAttributes({});\n      setEditMode(false);\n    } catch (error) {\n      setMessage(\"An error occurred during the operation.\");\n      console.error(error);\n    }\n  };\n  const handleEditClick = item => {\n    setAttributes(item);\n    setEditMode(true); // Edit mode aktif\n  };\n\n  // Render edilen form\n  const renderForm = () => {\n    if (operation === \"insert\" && !editMode) {\n      // Only show insert form if not in edit mode\n      const initialAttributes = {};\n      if (entityType === \"clubs\") {\n        initialAttributes.clubId = '';\n        initialAttributes.clubName = '';\n        initialAttributes.foundationDate = '';\n        initialAttributes.leagueName = '';\n        initialAttributes.reputation = '';\n        initialAttributes.presidentName = '';\n        initialAttributes.managerName = '';\n      } else if (entityType === \"football-players\") {\n        initialAttributes.playerId = '';\n        initialAttributes.name = '';\n        initialAttributes.age = '';\n        initialAttributes.countryName = '';\n        initialAttributes.clubId = '';\n        initialAttributes.clubName = '';\n        initialAttributes.positions = '';\n        initialAttributes.ca = '';\n        initialAttributes.pa = '';\n        initialAttributes.corners = '';\n        initialAttributes.crossing = '';\n        initialAttributes.dribbling = '';\n        initialAttributes.finishing = '';\n        initialAttributes.firstTouche = '';\n        initialAttributes.freeKickTaking = '';\n        initialAttributes.heading = '';\n        initialAttributes.longShots = '';\n        initialAttributes.longThrows = '';\n        initialAttributes.marking = '';\n        initialAttributes.passing = '';\n        initialAttributes.penaltyTaking = '';\n        initialAttributes.tackling = '';\n        initialAttributes.technique = '';\n        initialAttributes.aggression = '';\n        initialAttributes.anticipation = '';\n        initialAttributes.bravery = '';\n        initialAttributes.composure = '';\n        initialAttributes.concentration = '';\n        initialAttributes.vision = '';\n        initialAttributes.decision = '';\n        initialAttributes.determination = '';\n        initialAttributes.flair = '';\n        initialAttributes.leadership = '';\n        initialAttributes.offTheBall = '';\n        initialAttributes.positioning = '';\n        initialAttributes.teamWork = '';\n        initialAttributes.workRate = '';\n        initialAttributes.acceleration = '';\n        initialAttributes.agility = '';\n        initialAttributes.balance = '';\n        initialAttributes.pumpingReach = '';\n        initialAttributes.naturalFitness = '';\n        initialAttributes.pace = '';\n        initialAttributes.stamina = '';\n        initialAttributes.strength = '';\n        initialAttributes.stability = '';\n        initialAttributes.height = '';\n        initialAttributes.leftFoot = '';\n        initialAttributes.rightFoot = '';\n        initialAttributes.marketValue = '';\n        initialAttributes.salary = '';\n        initialAttributes.rentalClubName = '';\n        initialAttributes.addToFavourites = '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Insert \", entityType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), Object.keys(initialAttributes).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [key, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: attributes[key] || '' // Use the value from state\n            ,\n            onChange: e => setAttributes({\n              ...attributes,\n              [key]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendData(\"POST\", `http://localhost:8080/api/v1/${entityType}`, attributes),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this);\n    } else if (operation === \"delete\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Delete \", entityType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchData,\n          children: \"Fetch All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dataList.map((item, index) => {\n            const idField = getIdField(entityType); // Doğru ID alanını belirle\n            const itemId = item[idField]; // item içindeki doğru ID'yi al\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [`ID: ${itemId}, Name: ${item.userName || item.name || item.clubName}`, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (!itemId) {\n                    alert(`Invalid ID for item: ${JSON.stringify(item)}`);\n                    return;\n                  }\n                  sendData(\"delete\", `http://localhost:8080/api/v1/${entityType}/${itemId}`);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this);\n    } else if (operation === \"update\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Update \", entityType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchData,\n          children: \"Fetch All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: dataList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [`ID: ${item[getIdField(entityType)]}, Name: ${item.userName || item.name || item.clubName}`, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), editMode && Object.keys(attributes).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Edit Attributes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), Object.keys(attributes).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [key, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: attributes[key] || '',\n              onChange: e => setAttributes({\n                ...attributes,\n                [key]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendData(\"PUT\", `http://localhost:8080/api/v1/${entityType}/${attributes[getIdField(entityType)]}`, attributes),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"operations\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Operations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Entity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: entityType,\n        onChange: e => setEntityType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), entityOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), entityType && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Operation: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: operation,\n        onChange: e => setOperation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), operationOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }, this), operation && renderForm(), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n_s(Operations, \"0206XSSygdygadw/U9HTYMEawYU=\");\n_c = Operations;\nexport default Operations;\nvar _c;\n$RefreshReg$(_c, \"Operations\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Operations","_s","entityType","setEntityType","operation","setOperation","attributes","setAttributes","dataList","setDataList","message","setMessage","editMode","setEditMode","entityOptions","operationOptions","getIdField","fetchData","response","get","data","error","console","sendData","method","url","payload","delete","handleEditClick","item","renderForm","initialAttributes","clubId","clubName","foundationDate","leagueName","reputation","presidentName","managerName","playerId","name","age","countryName","positions","ca","pa","corners","crossing","dribbling","finishing","firstTouche","freeKickTaking","heading","longShots","longThrows","marking","passing","penaltyTaking","tackling","technique","aggression","anticipation","bravery","composure","concentration","vision","decision","determination","flair","leadership","offTheBall","positioning","teamWork","workRate","acceleration","agility","balance","pumpingReach","naturalFitness","pace","stamina","strength","stability","height","leftFoot","rightFoot","marketValue","salary","rentalClubName","addToFavourites","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","type","value","onChange","e","target","onClick","index","idField","itemId","userName","alert","JSON","stringify","length","className","disabled","option","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Operations.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Operations.css\";\r\n\r\nconst Operations = () => {\r\n    const [entityType, setEntityType] = useState(\"\"); // İlk dropdown seçimi\r\n    const [operation, setOperation] = useState(\"\"); // İkinci dropdown seçimi\r\n    const [attributes, setAttributes] = useState({});\r\n    const [dataList, setDataList] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [editMode, setEditMode] = useState(false);  // Flag to indicate if we are editing\r\n\r\n    // İlk dropdown seçenekleri\r\n    const entityOptions = [\"clubs\", \"football-players\", \"users\"];\r\n\r\n    // İkinci dropdown seçenekleri\r\n    const operationOptions = entityType === \"users\" ? [\"delete\"] : [\"insert\", \"delete\", \"update\"];\r\n\r\n    // İlk dropdown seçimi değiştiğinde her şeyi sıfırla\r\n    useEffect(() => {\r\n        setOperation(\"\");\r\n        setAttributes({});\r\n        setDataList([]);\r\n        setMessage(\"\");\r\n        setEditMode(false); //Reset Edit Mode when entity type changes\r\n    }, [entityType]);\r\n\r\n     // Operation seçiminde form resetlemesi\r\n     useEffect(() => {\r\n        if(operation===\"insert\" || operation===\"update\"){\r\n        setAttributes({});\r\n        setEditMode(false); // Reset edit mode when operation changes\r\n    }\r\n    }, [operation]);\r\n\r\n\r\n    const getIdField = (entityType) => {\r\n        if (entityType === \"clubs\") return \"clubId\";\r\n        if (entityType === \"football-players\") return \"playerId\";\r\n        if (entityType === \"users\") return \"userId\";\r\n        return \"id\"; // Varsayılan bir fallback\r\n    };\r\n\r\n\r\n    // Veriyi backend'den getirme\r\n    const fetchData = async () => {\r\n        try {\r\n          let response = null; // Başlangıç değeri\r\n      \r\n          // entityType'a göre uygun endpoint'i belirliyoruz\r\n          if (entityType === \"users\") {\r\n            response = await axios.get(\"http://localhost:8080/api/v1/users/non-admins\");\r\n          } else if (entityType === \"clubs\") {\r\n            response = await axios.get(\"http://localhost:8080/api/v1/clubs\");\r\n          } else if (entityType === \"football-players\") {\r\n            response = await axios.get(\"http://localhost:8080/api/v1/football-players\");\r\n          }\r\n      \r\n          if (response) {\r\n            setDataList(response.data); // Gelen veriyi listeye ekliyoruz\r\n            setMessage(\"\"); // Başarılı istek sonrası mesajı temizliyoruz\r\n          } else {\r\n            setMessage(\"Invalid entity type selected.\");\r\n          }\r\n        } catch (error) {\r\n          setMessage(\"An error occurred while fetching data.\");\r\n          console.error(error);\r\n        }\r\n      };\r\n      \r\n\r\n    // Backend'e veri gönderme (Insert, Update veya Delete)\r\n    const sendData = async (method, url, payload) => {\r\n        try {\r\n            if (method === \"delete\") {\r\n                await axios.delete(url);\r\n            } else {\r\n                await axios({\r\n                    method,\r\n                    url,\r\n                    data: payload,\r\n                });\r\n            }\r\n            setMessage(\"Successfully done!\");\r\n            fetchData(); // Operasyondan sonra veriyi güncelle\r\n            setAttributes({});\r\n            setEditMode(false);\r\n        } catch (error) {\r\n            setMessage(\"An error occurred during the operation.\");\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n      const handleEditClick = (item) => {\r\n        setAttributes(item);\r\n        setEditMode(true); // Edit mode aktif\r\n\r\n    };\r\n\r\n    // Render edilen form\r\n    const renderForm = () => {\r\n        if (operation === \"insert\" && !editMode) { // Only show insert form if not in edit mode\r\n            const initialAttributes = {};\r\n            if (entityType === \"clubs\") {\r\n                initialAttributes.clubId = '';\r\n                initialAttributes.clubName = '';\r\n                initialAttributes.foundationDate = '';\r\n                initialAttributes.leagueName = '';\r\n                initialAttributes.reputation = '';\r\n                initialAttributes.presidentName = '';\r\n                initialAttributes.managerName = '';\r\n            } else if (entityType === \"football-players\") {\r\n                initialAttributes.playerId='';\r\n                initialAttributes.name = '';\r\n                initialAttributes.age='';\r\n                initialAttributes.countryName = '';\r\n                initialAttributes.clubId='';\r\n                initialAttributes.clubName='';\r\n                initialAttributes.positions = '';\r\n                initialAttributes.ca= '';\r\n                initialAttributes.pa = '';\r\n                initialAttributes.corners = '';\r\n                initialAttributes.crossing = '';\r\n                initialAttributes.dribbling = '';\r\n                initialAttributes.finishing = '';\r\n                initialAttributes.firstTouche = '';\r\n                initialAttributes.freeKickTaking = '';\r\n                initialAttributes.heading = '';\r\n                initialAttributes.longShots = '';\r\n                initialAttributes.longThrows = '';\r\n                initialAttributes.marking = '';\r\n                initialAttributes.passing = '';\r\n                initialAttributes.penaltyTaking = '';\r\n                initialAttributes.tackling = '';\r\n                initialAttributes.technique = '';\r\n                initialAttributes.aggression = '';\r\n                initialAttributes.anticipation = '';\r\n                initialAttributes.bravery = '';\r\n                initialAttributes.composure = '';\r\n                initialAttributes.concentration = '';\r\n                initialAttributes.vision = '';\r\n                initialAttributes.decision = '';\r\n                initialAttributes.determination = '';\r\n                initialAttributes.flair = '';\r\n                initialAttributes.leadership = '';\r\n                initialAttributes.offTheBall = '';\r\n                initialAttributes.positioning = '';\r\n                initialAttributes.teamWork = '';\r\n                initialAttributes.workRate = '';\r\n                initialAttributes.acceleration = '';\r\n                initialAttributes.agility = '';\r\n                initialAttributes.balance = '';\r\n                initialAttributes.pumpingReach = '';\r\n                initialAttributes.naturalFitness = '';\r\n                initialAttributes.pace = '';\r\n                initialAttributes.stamina = '';\r\n                initialAttributes.strength = '';\r\n                initialAttributes.stability = '';\r\n                initialAttributes.height = '';\r\n                initialAttributes.leftFoot = '';\r\n                initialAttributes.rightFoot = '';\r\n                initialAttributes.marketValue = '';\r\n                initialAttributes.salary = '';\r\n                 initialAttributes.rentalClubName = '';\r\n                 initialAttributes.addToFavourites= '';\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <h3>Insert {entityType}</h3>\r\n                    {/* Dinamik attribute inputları */}\r\n                    {Object.keys(initialAttributes).map((key) => (\r\n                        <div key={key}>\r\n                            <label>{key}: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={attributes[key] || ''} // Use the value from state\r\n                                onChange={(e) =>\r\n                                    setAttributes({ ...attributes, [key]: e.target.value })\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    <button\r\n                        onClick={() =>\r\n                            sendData(\"POST\", `http://localhost:8080/api/v1/${entityType}`, attributes)\r\n                        }\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            );\r\n        } else if (operation === \"delete\") {\r\n            return (\r\n                <div>\r\n                    <h3>Delete {entityType}</h3>\r\n                    <button onClick={fetchData}>Fetch All</button>\r\n                    <ul>\r\n                        {dataList.map((item, index) => {\r\n                            const idField = getIdField(entityType); // Doğru ID alanını belirle\r\n                            const itemId = item[idField]; // item içindeki doğru ID'yi al\r\n                            \r\n                            return (\r\n                                <li key={index}>\r\n                                    {`ID: ${itemId}, Name: ${item.userName || item.name || item.clubName}`}{\" \"}\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            if (!itemId) {\r\n                                                alert(`Invalid ID for item: ${JSON.stringify(item)}`);\r\n                                                return;\r\n                                            }\r\n                                            sendData(\r\n                                                \"delete\",\r\n                                                `http://localhost:8080/api/v1/${entityType}/${itemId}`\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n\r\n                </div>\r\n            );\r\n        } else if (operation === \"update\") {\r\n            return (\r\n              <div>\r\n                    <h3>Update {entityType}</h3>\r\n                    <button onClick={fetchData}>Fetch All</button>\r\n                    <ul>\r\n                        {dataList.map((item, index) => (\r\n                            <li key={index}>\r\n                                {`ID: ${item[getIdField(entityType)]}, Name: ${item.userName || item.name || item.clubName}`}\r\n                                <button\r\n                                    onClick={() => handleEditClick(item)}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                   {editMode && Object.keys(attributes).length > 0 && (\r\n                        <div>\r\n                            <h4>Edit Attributes</h4>\r\n                            {Object.keys(attributes).map((key) => (\r\n                                <div key={key}>\r\n                                    <label>{key}: </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={attributes[key] || ''}\r\n                                        onChange={(e) =>\r\n                                            setAttributes({ ...attributes, [key]: e.target.value })\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                            <button\r\n                                onClick={() =>\r\n                                    sendData(\r\n                                        \"PUT\",\r\n                                        `http://localhost:8080/api/v1/${entityType}/${attributes[getIdField(entityType)]}`,\r\n                                        attributes\r\n                                    )\r\n                                }\r\n                            >\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"operations\">\r\n            <h2>Admin Operations</h2>\r\n            {/* İlk Dropdown */}\r\n            <div>\r\n                <label>Select Entity: </label>\r\n                <select value={entityType} onChange={(e) => setEntityType(e.target.value)}>\r\n                    <option value=\"\" disabled>\r\n                        -- Select --\r\n                    </option>\r\n                    {entityOptions.map((option) => (\r\n                        <option key={option} value={option}>\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* İkinci Dropdown */}\r\n            {entityType && (\r\n                <div>\r\n                    <label>Select Operation: </label>\r\n                    <select value={operation} onChange={(e) => setOperation(e.target.value)}>\r\n                        <option value=\"\" disabled>\r\n                            -- Select --\r\n                        </option>\r\n                        {operationOptions.map((option) => (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            {/* Form veya Liste Renderlama */}\r\n            {operation && renderForm()}\r\n\r\n            {/* Mesaj */}\r\n            {message && <div className=\"message\">{message}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Operations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}