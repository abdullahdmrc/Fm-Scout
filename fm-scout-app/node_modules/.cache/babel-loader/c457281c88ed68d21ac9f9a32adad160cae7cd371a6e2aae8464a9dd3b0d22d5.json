{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport \"./Login.css\"; // CSS dosyasını dahil et\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\"; // İkonlar için React Icons\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"User Name\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">Login</button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = () => {\r\n  //const [userId, setUserID] = useState(\"\");\r\n  //const [isAdmin, setIsAdmin] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/v1/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userName, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        if (userData.isAdmin === \"true\") {\r\n          navigate(\"./pages/Players\"); // Admin paneline yönlendir\r\n        } else {\r\n          navigate(\"./pages/Players\"); // Kullanıcı paneline yönlendir\r\n        }\r\n      } else {\r\n        setErrorMessage(\"Invalid username or password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n          \r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Backend'e GET isteği gönder\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/v1/users/login?userName=${userName}&password=${password}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        }\r\n      );\r\n      const userData = await response.json();\r\n      if (response.ok) {\r\n      \r\n\r\n        if (userData.isAdmin === true) {\r\n          navigate(\"/players\"); // Admin paneline yönlendir\r\n        } else {\r\n          navigate(\"/players\"); // Kullanıcı paneline yönlendir\r\n        }\r\n      } else if (response.status === 400 || response.status === 401) {\r\n        setErrorMessage(\"Invalid username or password.\");\r\n      } else {\r\n        setErrorMessage(\"An error occurred. Please try again later.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn,\n  setIsAdmin\n}) => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoggedIn, setIsLoggedInState] = useState(false); // Kullanıcı durumu\n  const navigate = useNavigate();\n\n  // Giriş yapma işlemi\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8080/api/v1/users/login?userName=${userName}&password=${password}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const userData = await response.json();\n      if (response.ok) {\n        setIsLoggedIn(true);\n        setIsAdmin(userData.isAdmin); // Admin kontrolü\n        setIsLoggedInState(true); // Kullanıcıyı giriş yapmış olarak işaretle\n\n        if (userData.isAdmin) {\n          setIsLoggedIn(true);\n          localStorage.setItem(\"isLoggedIn\", \"true\"); // Giriş durumu saklanıyor\n\n          navigate(\"/players\"); // Admin paneline yönlendir\n        } else {\n          setIsLoggedIn(true);\n          localStorage.setItem(\"isLoggedIn\", \"true\"); // Giriş durumu saklanıyor\n\n          navigate(\"/players\"); // Kullanıcı paneline yönlendir\n        }\n      } else if (response.status === 400 || response.status === 401) {\n        setErrorMessage(\"Invalid username or password.\");\n      } else {\n        setErrorMessage(\"An error occurred. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"An error occurred. Please try again.\");\n    }\n  };\n\n  // Çıkış yapma işlemi\n  const handleLogout = async () => {\n    try {\n      // Backend'e logout isteği gönder\n      const response = await fetch(\"http://localhost:8080/api/v1/users/logout\", {\n        method: \"POST\",\n        credentials: \"include\" // Eğer oturum çerezi kullanıyorsanız\n      });\n      if (response.ok) {\n        setIsLoggedIn(false); // Kullanıcıyı çıkış yapmış olarak işaretle\n        setIsAdmin(false); // Admin kontrolü sıfırlanır\n        setIsLoggedInState(false); // Kullanıcı durumu sıfırlanır\n        localStorage.removeItem(\"authToken\"); // Eğer varsa token'ı sil\n        navigate(\"/\"); // Çıkış sonrası ana sayfaya yönlendir\n      } else {\n        console.error(\"Logout failed\");\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbox\",\n          children: [/*#__PURE__*/_jsxDEV(FaEnvelope, {\n            className: \"input-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"User Name\",\n            value: userName,\n            onChange: e => setUserName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbox\",\n          children: [/*#__PURE__*/_jsxDEV(FaLock, {\n            className: \"input-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You are logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"kR1pGvfCXoqsMPLA6JDLP8Pxl80=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","FaEnvelope","FaLock","jsxDEV","_jsxDEV","Login","setIsLoggedIn","setIsAdmin","_s","userName","setUserName","password","setPassword","errorMessage","setErrorMessage","isLoggedIn","setIsLoggedInState","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","userData","json","ok","isAdmin","localStorage","setItem","status","error","console","handleLogout","credentials","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/login.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport \"./Login.css\"; // CSS dosyasını dahil et\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\"; // İkonlar için React Icons\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"User Name\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">Login</button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = () => {\r\n  //const [userId, setUserID] = useState(\"\");\r\n  //const [isAdmin, setIsAdmin] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/v1/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userName, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        if (userData.isAdmin === \"true\") {\r\n          navigate(\"./pages/Players\"); // Admin paneline yönlendir\r\n        } else {\r\n          navigate(\"./pages/Players\"); // Kullanıcı paneline yönlendir\r\n        }\r\n      } else {\r\n        setErrorMessage(\"Invalid username or password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n        \r\n          \r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Backend'e GET isteği gönder\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/v1/users/login?userName=${userName}&password=${password}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        }\r\n      );\r\n      const userData = await response.json();\r\n      if (response.ok) {\r\n      \r\n\r\n        if (userData.isAdmin === true) {\r\n          navigate(\"/players\"); // Admin paneline yönlendir\r\n        } else {\r\n          navigate(\"/players\"); // Kullanıcı paneline yönlendir\r\n        }\r\n      } else if (response.status === 400 || response.status === 401) {\r\n        setErrorMessage(\"Invalid username or password.\");\r\n      } else {\r\n        setErrorMessage(\"An error occurred. Please try again later.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"textbox\">\r\n            <FaEnvelope className=\"input-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <FaLock className=\"input-icon\" />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"login-btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\r\n\r\nconst Login = ({ setIsLoggedIn, setIsAdmin }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedInState] = useState(false); // Kullanıcı durumu\r\n  const navigate = useNavigate();\r\n\r\n  // Giriş yapma işlemi\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/v1/users/login?userName=${userName}&password=${password}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const userData = await response.json();\r\n      if (response.ok) {\r\n        setIsLoggedIn(true);\r\n        setIsAdmin(userData.isAdmin); // Admin kontrolü\r\n        setIsLoggedInState(true); // Kullanıcıyı giriş yapmış olarak işaretle\r\n        \r\n\r\n        if (userData.isAdmin) {\r\n          setIsLoggedIn(true);\r\n          localStorage.setItem(\"isLoggedIn\", \"true\");  // Giriş durumu saklanıyor\r\n\r\n          navigate(\"/players\"); // Admin paneline yönlendir\r\n        } else {\r\n          setIsLoggedIn(true);\r\n          localStorage.setItem(\"isLoggedIn\", \"true\");  // Giriş durumu saklanıyor\r\n\r\n          navigate(\"/players\"); // Kullanıcı paneline yönlendir\r\n        }\r\n      } else if (response.status === 400 || response.status === 401) {\r\n        setErrorMessage(\"Invalid username or password.\");\r\n      } else {\r\n        setErrorMessage(\"An error occurred. Please try again later.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Çıkış yapma işlemi\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Backend'e logout isteği gönder\r\n      const response = await fetch(\"http://localhost:8080/api/v1/users/logout\", {\r\n        method: \"POST\",\r\n        credentials: \"include\", // Eğer oturum çerezi kullanıyorsanız\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsLoggedIn(false); // Kullanıcıyı çıkış yapmış olarak işaretle\r\n        setIsAdmin(false); // Admin kontrolü sıfırlanır\r\n        setIsLoggedInState(false); // Kullanıcı durumu sıfırlanır\r\n        localStorage.removeItem(\"authToken\"); // Eğer varsa token'ı sil\r\n        navigate(\"/\"); // Çıkış sonrası ana sayfaya yönlendir\r\n      } else {\r\n        console.error(\"Logout failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back</h2>\r\n        {!isLoggedIn ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"textbox\">\r\n              <FaEnvelope className=\"input-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"User Name\"\r\n                value={userName}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"textbox\">\r\n              <FaLock className=\"input-icon\" />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <div className=\"btn-container\">\r\n              <button type=\"submit\" className=\"login-btn\">\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <h3>You are logged in</h3>\r\n            <button onClick={handleLogout} className=\"logout-btn\">\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        )}\r\n        {!isLoggedIn && (\r\n          <p className=\"signup-link\">\r\n            Don't have an account? <a href=\"/signup\">Sign up</a>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}