{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Clubs.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\r\n\r\nconst Clubs = () => {\r\n  const [clubs, setClubs] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    league: \"\",\r\n    nation: \"\",\r\n    manager:\"\",\r\n  });\r\n  \r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Sahte kulüp verileri\r\n    const mockData = Array.from({ length: 50 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Club ${i + 1}`,\r\n      league: `League ${i % 5 + 1}`,\r\n      nation: `Country ${i % 10 + 1}`,\r\n      manager: `Manager ${i + 1}`,\r\n      city: `City ${i % 10 + 1}`,\r\n      established: 1900 + (i % 120),\r\n    }));\r\n    setClubs(mockData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const filteredClubs = clubs.filter((club) =>\r\n    Object.keys(filters).every((key) =>\r\n      filters[key] === \"\" || club[key]?.toLowerCase().includes(filters[key].toLowerCase())\r\n    )\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className=\"clubs-container\">\r\n      \r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-input\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>League</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nation\"\r\n            value={filters.nation}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Manager</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager\"\r\n            value={filters.manager}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n      </aside>\r\n\r\n      <div className=\"club-list\">\r\n        <h3>Clubs</h3>\r\n        <table className=\"club-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>League</th>\r\n              <th>Nation</th>\r\n              <th>Manager</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredClubs.map((club) => (\r\n              <tr\r\n                key={club.id}\r\n                className=\"club-row\"\r\n                onClick={() => navigate(`/clubs/${club.id}`)}\r\n              >\r\n                <td>{club.name}</td>\r\n                <td>{club.league}</td>\r\n                <td>{club.nation}</td>\r\n                <td>{club.manager}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clubs;*/\n\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\r\n\r\nconst Clubs = () => {\r\n  const [clubs, setClubs] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    league: \"\",\r\n    nation: \"\",\r\n    manager: \"\",\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5; // Her sayfada gösterilecek öğe sayısı\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Sahte kulüp verileri\r\n    const mockData = Array.from({ length: 50 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Club ${i + 1}`,\r\n      league: `League ${i % 5 + 1}`,\r\n      nation: `Country ${i % 10 + 1}`,\r\n      manager: `Manager ${i + 1}`,\r\n      city: `City ${i % 10 + 1}`,\r\n      established: 1900 + (i % 120),\r\n    }));\r\n    setClubs(mockData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n    setCurrentPage(1); // Filtreleme yapıldığında ilk sayfaya dön\r\n  };\r\n\r\n  const filteredClubs = clubs.filter((club) =>\r\n    Object.keys(filters).every((key) =>\r\n      filters[key] === \"\" || club[key]?.toLowerCase().includes(filters[key].toLowerCase())\r\n    )\r\n  );\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentClubs = filteredClubs.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const totalPages = Math.ceil(filteredClubs.length / itemsPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"clubs-container\">\r\n      \r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-input\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>League</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nation\"\r\n            value={filters.nation}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Manager</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager\"\r\n            value={filters.manager}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n      </aside>\r\n\r\n      \r\n      <div className=\"club-list\">\r\n        <h3>Clubs</h3>\r\n        <table className=\"club-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>League</th>\r\n              <th>Nation</th>\r\n              <th>Manager</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentClubs.map((club) => (\r\n              <tr\r\n                key={club.id}\r\n                className=\"club-row\"\r\n                onClick={() => navigate(`/clubs/${club.id}`)}\r\n              >\r\n                <td>{club.name}</td>\r\n                <td>{club.league}</td>\r\n                <td>{club.nation}</td>\r\n                <td>{club.manager}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        \r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          >\r\n            «\r\n          </button>\r\n          {Array.from({ length: totalPages }, (_, i) => (\r\n            <button\r\n              key={i + 1}\r\n              className={`pagination-button ${\r\n                currentPage === i + 1 ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handlePageChange(i + 1)}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          ))}\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            »\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clubs;*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clubs = () => {\n  _s();\n  const [clubs, setClubs] = useState([]);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    league: \"\",\n    nation: \"\",\n    manager: \"\"\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5; // Her sayfada gösterilecek öğe sayısı\n  const pagesPerGroup = 10; // Sayfa grubundaki maksimum sayfa sayısı\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Sahte kulüp verileri\n    const mockData = Array.from({\n      length: 50\n    }, (_, i) => ({\n      id: i + 1,\n      name: `Club ${i + 1}`,\n      league: `League ${i % 5 + 1}`,\n      nation: `Country ${i % 10 + 1}`,\n      manager: `Manager ${i + 1}`,\n      city: `City ${i % 10 + 1}`,\n      established: 1900 + i % 120\n    }));\n    setClubs(mockData);\n  }, []);\n  const handleFilterChange = e => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n    setCurrentPage(1); // Filtreleme yapıldığında ilk sayfaya dön\n  };\n  const filteredClubs = clubs.filter(club => Object.keys(filters).every(key => {\n    var _club$key;\n    return filters[key] === \"\" || ((_club$key = club[key]) === null || _club$key === void 0 ? void 0 : _club$key.toLowerCase().includes(filters[key].toLowerCase()));\n  }));\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentClubs = filteredClubs.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredClubs.length / itemsPerPage);\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  const handleGroupJump = direction => {\n    const newPage = direction === \"prev\" ? Math.max(currentPage - pagesPerGroup, 1) : Math.min(currentPage + pagesPerGroup, totalPages);\n    setCurrentPage(newPage);\n  };\n  const startPage = Math.floor((currentPage - 1) / pagesPerGroup) * pagesPerGroup + 1;\n  const endPage = Math.min(startPage + pagesPerGroup - 1, totalPages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clubs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: filters.name,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"League\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"league\",\n          value: filters.league,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nation\",\n          value: filters.nation,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"manager\",\n          value: filters.manager,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"club-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Clubs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"club-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"League\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentClubs.map(club => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"club-row\",\n            onClick: () => navigate(`/clubs/${club.id}`),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: club.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: club.league\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: club.nation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: club.manager\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, club.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: () => handleGroupJump(\"prev\"),\n          disabled: currentPage === 1,\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), Array.from({\n          length: endPage - startPage + 1\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pagination-button ${currentPage === i + startPage ? \"active\" : \"\"}`,\n          onClick: () => handlePageChange(i + startPage),\n          children: i + startPage\n        }, i + startPage, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: () => handleGroupJump(\"next\"),\n          disabled: currentPage === totalPages,\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(Clubs, \"hVVbHCGKVmI7QF7RmZziYYKicjg=\", false, function () {\n  return [useNavigate];\n});\n_c = Clubs;\nexport default Clubs;\nvar _c;\n$RefreshReg$(_c, \"Clubs\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Clubs","_s","clubs","setClubs","filters","setFilters","name","league","nation","manager","currentPage","setCurrentPage","itemsPerPage","pagesPerGroup","navigate","mockData","Array","from","length","_","i","id","city","established","handleFilterChange","e","target","value","filteredClubs","filter","club","Object","keys","every","key","_club$key","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentClubs","slice","totalPages","Math","ceil","handlePageChange","page","handleGroupJump","direction","newPage","max","min","startPage","floor","endPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Clubs.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\r\n\r\nconst Clubs = () => {\r\n  const [clubs, setClubs] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    league: \"\",\r\n    nation: \"\",\r\n    manager:\"\",\r\n  });\r\n  \r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Sahte kulüp verileri\r\n    const mockData = Array.from({ length: 50 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Club ${i + 1}`,\r\n      league: `League ${i % 5 + 1}`,\r\n      nation: `Country ${i % 10 + 1}`,\r\n      manager: `Manager ${i + 1}`,\r\n      city: `City ${i % 10 + 1}`,\r\n      established: 1900 + (i % 120),\r\n    }));\r\n    setClubs(mockData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const filteredClubs = clubs.filter((club) =>\r\n    Object.keys(filters).every((key) =>\r\n      filters[key] === \"\" || club[key]?.toLowerCase().includes(filters[key].toLowerCase())\r\n    )\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className=\"clubs-container\">\r\n      \r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-input\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>League</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nation\"\r\n            value={filters.nation}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Manager</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager\"\r\n            value={filters.manager}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n      </aside>\r\n\r\n      <div className=\"club-list\">\r\n        <h3>Clubs</h3>\r\n        <table className=\"club-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>League</th>\r\n              <th>Nation</th>\r\n              <th>Manager</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredClubs.map((club) => (\r\n              <tr\r\n                key={club.id}\r\n                className=\"club-row\"\r\n                onClick={() => navigate(`/clubs/${club.id}`)}\r\n              >\r\n                <td>{club.name}</td>\r\n                <td>{club.league}</td>\r\n                <td>{club.nation}</td>\r\n                <td>{club.manager}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clubs;*/\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\r\n\r\nconst Clubs = () => {\r\n  const [clubs, setClubs] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    league: \"\",\r\n    nation: \"\",\r\n    manager: \"\",\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5; // Her sayfada gösterilecek öğe sayısı\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Sahte kulüp verileri\r\n    const mockData = Array.from({ length: 50 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Club ${i + 1}`,\r\n      league: `League ${i % 5 + 1}`,\r\n      nation: `Country ${i % 10 + 1}`,\r\n      manager: `Manager ${i + 1}`,\r\n      city: `City ${i % 10 + 1}`,\r\n      established: 1900 + (i % 120),\r\n    }));\r\n    setClubs(mockData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n    setCurrentPage(1); // Filtreleme yapıldığında ilk sayfaya dön\r\n  };\r\n\r\n  const filteredClubs = clubs.filter((club) =>\r\n    Object.keys(filters).every((key) =>\r\n      filters[key] === \"\" || club[key]?.toLowerCase().includes(filters[key].toLowerCase())\r\n    )\r\n  );\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentClubs = filteredClubs.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const totalPages = Math.ceil(filteredClubs.length / itemsPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"clubs-container\">\r\n      \r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-input\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>League</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nation\"\r\n            value={filters.nation}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Manager</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager\"\r\n            value={filters.manager}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n      </aside>\r\n\r\n      \r\n      <div className=\"club-list\">\r\n        <h3>Clubs</h3>\r\n        <table className=\"club-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>League</th>\r\n              <th>Nation</th>\r\n              <th>Manager</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentClubs.map((club) => (\r\n              <tr\r\n                key={club.id}\r\n                className=\"club-row\"\r\n                onClick={() => navigate(`/clubs/${club.id}`)}\r\n              >\r\n                <td>{club.name}</td>\r\n                <td>{club.league}</td>\r\n                <td>{club.nation}</td>\r\n                <td>{club.manager}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        \r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handlePageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          >\r\n            «\r\n          </button>\r\n          {Array.from({ length: totalPages }, (_, i) => (\r\n            <button\r\n              key={i + 1}\r\n              className={`pagination-button ${\r\n                currentPage === i + 1 ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handlePageChange(i + 1)}\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          ))}\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handlePageChange(currentPage + 1)}\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            »\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clubs;*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Clubs.css\"; // CSS dosyasını ekliyoruz.\r\n\r\nconst Clubs = () => {\r\n  const [clubs, setClubs] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    league: \"\",\r\n    nation: \"\",\r\n    manager: \"\",\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5; // Her sayfada gösterilecek öğe sayısı\r\n  const pagesPerGroup = 10; // Sayfa grubundaki maksimum sayfa sayısı\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Sahte kulüp verileri\r\n    const mockData = Array.from({ length: 50 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Club ${i + 1}`,\r\n      league: `League ${i % 5 + 1}`,\r\n      nation: `Country ${i % 10 + 1}`,\r\n      manager: `Manager ${i + 1}`,\r\n      city: `City ${i % 10 + 1}`,\r\n      established: 1900 + (i % 120),\r\n    }));\r\n    setClubs(mockData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n    setCurrentPage(1); // Filtreleme yapıldığında ilk sayfaya dön\r\n  };\r\n\r\n  const filteredClubs = clubs.filter((club) =>\r\n    Object.keys(filters).every((key) =>\r\n      filters[key] === \"\" || club[key]?.toLowerCase().includes(filters[key].toLowerCase())\r\n    )\r\n  );\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentClubs = filteredClubs.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const totalPages = Math.ceil(filteredClubs.length / itemsPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n  const handleGroupJump = (direction) => {\r\n    const newPage =\r\n      direction === \"prev\"\r\n        ? Math.max(currentPage - pagesPerGroup, 1)\r\n        : Math.min(currentPage + pagesPerGroup, totalPages);\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const startPage = Math.floor((currentPage - 1) / pagesPerGroup) * pagesPerGroup + 1;\r\n  const endPage = Math.min(startPage + pagesPerGroup - 1, totalPages);\r\n\r\n  return (\r\n    <div className=\"clubs-container\">\r\n      {/* Filtreleme Alanı */}\r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-input\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>League</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"league\"\r\n            value={filters.league}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Nation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nation\"\r\n            value={filters.nation}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n        <div className=\"filter-input\">\r\n          <label>Manager</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager\"\r\n            value={filters.manager}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Kulüp Listesi */}\r\n      <div className=\"club-list\">\r\n        <h3>Clubs</h3>\r\n        <table className=\"club-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>League</th>\r\n              <th>Nation</th>\r\n              <th>Manager</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentClubs.map((club) => (\r\n              <tr\r\n                key={club.id}\r\n                className=\"club-row\"\r\n                onClick={() => navigate(`/clubs/${club.id}`)}\r\n              >\r\n                <td>{club.name}</td>\r\n                <td>{club.league}</td>\r\n                <td>{club.nation}</td>\r\n                <td>{club.manager}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Sayfalama */}\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handleGroupJump(\"prev\")}\r\n            disabled={currentPage === 1}\r\n          >\r\n            «\r\n          </button>\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => (\r\n            <button\r\n              key={i + startPage}\r\n              className={`pagination-button ${\r\n                currentPage === i + startPage ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handlePageChange(i + startPage)}\r\n            >\r\n              {i + startPage}\r\n            </button>\r\n          ))}\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => handleGroupJump(\"next\")}\r\n            disabled={currentPage === totalPages}\r\n          >\r\n            »\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clubs;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}