{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUSTAFA DEM\\u0130RC\\u0130\\\\fm-scout-app\\\\src\\\\pages\\\\Players.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from \"react\";\r\nimport \"./Players.css\";\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const playersPerPage = 10;\r\n  const paginationGroupSize = 10;\r\n\r\n  useEffect(() => {\r\n    const data = Array.from({ length: 8000 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Player ${i + 1}`,\r\n      club: `Club ${i % 20}`,\r\n      nationality: `Country ${i % 10}`,\r\n      position: [\"GK\", \"DC\", \"MC\", \"ST\"][i % 4],\r\n      rating: Math.floor(Math.random() * 10) + 80,\r\n      contractUntil: \"06-2025\",\r\n      wage: `${Math.floor(Math.random() * 400) + 50}K p/w`,\r\n      image: i % 7 === 0 ? null : `https://via.placeholder.com/50?text=P${i + 1}`,\r\n    }));\r\n    setPlayers(data);\r\n  }, []);\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  // Şu anki sayfa grubunun başlangıç ve bitiş indekslerini hesapla\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  // Sayfa değiştirme işlemleri\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Grup değiştirme işlemleri (sol ve sağ tuşlar için)\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    } else {\r\n      setCurrentPage(1); // En başa gidiyoruz\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    } else {\r\n      setCurrentPage(totalPages); // En sona gidiyoruz\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        \r\n        <h2>Filters</h2>\r\n        <div className=\"filter-group\">\r\n          <label>Name</label>\r\n          <input type=\"text\" placeholder=\"Name\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Club</label>\r\n          <input type=\"text\" placeholder=\"Club\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Nationality</label>\r\n          <input type=\"text\" placeholder=\"Nationality\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>League</label>\r\n          <input type=\"text\" placeholder=\"League\" />\r\n        </div>\r\n        \r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Photo</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Rating</th>\r\n              <th>Wage</th>\r\n              <th>Contract</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>\r\n                  {player.image ? (\r\n                    <img\r\n                      src={player.image}\r\n                      alt={player.name}\r\n                      className=\"player-photo\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"placeholder-photo\">No Image</div>\r\n                  )}\r\n                </td>\r\n                <td>{player.name}</td>\r\n                <td>{player.club}</td>\r\n                <td>{player.position}</td>\r\n                <td>{player.rating}</td>\r\n                <td>{player.wage}</td>\r\n                <td>{player.contractUntil}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${\r\n                  currentPage === pageNumber ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\nimport React, { useState, useEffect } from \"react\";\nimport \"./Players.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Players = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const playersPerPage = 50;\n  const paginationGroupSize = 10;\n  useEffect(() => {\n    // Veritabanından oyuncu verilerini çekiyoruz\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/players?page=${currentPage}&limit=${playersPerPage}`); // Backend'de pagination endpoint\n        setPlayers(response.data.players); // players array'i backend'den gelen veri\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, [currentPage]);\n  const totalPages = Math.ceil(8000 / playersPerPage); // Toplam sayfa sayısı\n\n  // Sayfa değiştirildiğinde yapılacaklar\n  const paginate = pageNumber => {\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\n  };\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\n  const goToPreviousGroup = () => {\n    const previousGroupStart = startPage - paginationGroupSize;\n    if (previousGroupStart > 0) {\n      setCurrentPage(previousGroupStart);\n    }\n  };\n  const goToNextGroup = () => {\n    const nextGroupStart = startPage + paginationGroupSize;\n    if (nextGroupStart <= totalPages) {\n      setCurrentPage(nextGroupStart);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"players-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nationality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nationality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"League\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"League\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"players-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: player.image,\n                alt: player.name,\n                className: \"player-photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"placeholder-photo\",\n                children: \"No Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.club\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.wage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.contractUntil\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToPreviousGroup,\n          disabled: currentPage <= paginationGroupSize,\n          children: \"<<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), Array.from({\n          length: endPage - startPage + 1\n        }, (_, i) => {\n          const pageNumber = startPage + i;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `pagination-btn ${currentPage === pageNumber ? \"active\" : \"\"}`,\n            onClick: () => paginate(pageNumber),\n            children: pageNumber\n          }, pageNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-btn\",\n          onClick: goToNextGroup,\n          disabled: startPage + paginationGroupSize > totalPages,\n          children: \">>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Players, \"9AESmZJr6IsU1qTSyu8FH+CH0ik=\");\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Players","_s","players","setPlayers","currentPage","setCurrentPage","loading","setLoading","playersPerPage","paginationGroupSize","fetchPlayers","response","get","data","error","console","totalPages","Math","ceil","paginate","pageNumber","currentPaginationGroup","floor","startPage","endPage","min","goToPreviousGroup","previousGroupStart","goToNextGroup","nextGroupStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","player","image","src","alt","name","club","position","rating","wage","contractUntil","id","onClick","disabled","Array","from","length","_","i","_c","$RefreshReg$"],"sources":["C:/Users/MUSTAFA DEMİRCİ/fm-scout-app/src/pages/Players.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\r\nimport \"./Players.css\";\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const playersPerPage = 10;\r\n  const paginationGroupSize = 10;\r\n\r\n  useEffect(() => {\r\n    const data = Array.from({ length: 8000 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Player ${i + 1}`,\r\n      club: `Club ${i % 20}`,\r\n      nationality: `Country ${i % 10}`,\r\n      position: [\"GK\", \"DC\", \"MC\", \"ST\"][i % 4],\r\n      rating: Math.floor(Math.random() * 10) + 80,\r\n      contractUntil: \"06-2025\",\r\n      wage: `${Math.floor(Math.random() * 400) + 50}K p/w`,\r\n      image: i % 7 === 0 ? null : `https://via.placeholder.com/50?text=P${i + 1}`,\r\n    }));\r\n    setPlayers(data);\r\n  }, []);\r\n\r\n  const totalPages = Math.ceil(players.length / playersPerPage);\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n  // Şu anki sayfa grubunun başlangıç ve bitiş indekslerini hesapla\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  // Sayfa değiştirme işlemleri\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Grup değiştirme işlemleri (sol ve sağ tuşlar için)\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    } else {\r\n      setCurrentPage(1); // En başa gidiyoruz\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    } else {\r\n      setCurrentPage(totalPages); // En sona gidiyoruz\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        \r\n        <h2>Filters</h2>\r\n        <div className=\"filter-group\">\r\n          <label>Name</label>\r\n          <input type=\"text\" placeholder=\"Name\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Club</label>\r\n          <input type=\"text\" placeholder=\"Club\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Nationality</label>\r\n          <input type=\"text\" placeholder=\"Nationality\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>League</label>\r\n          <input type=\"text\" placeholder=\"League\" />\r\n        </div>\r\n        \r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Photo</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Rating</th>\r\n              <th>Wage</th>\r\n              <th>Contract</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentPlayers.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>\r\n                  {player.image ? (\r\n                    <img\r\n                      src={player.image}\r\n                      alt={player.name}\r\n                      className=\"player-photo\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"placeholder-photo\">No Image</div>\r\n                  )}\r\n                </td>\r\n                <td>{player.name}</td>\r\n                <td>{player.club}</td>\r\n                <td>{player.position}</td>\r\n                <td>{player.rating}</td>\r\n                <td>{player.wage}</td>\r\n                <td>{player.contractUntil}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${\r\n                  currentPage === pageNumber ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Players.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Players = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const playersPerPage = 50;\r\n  const paginationGroupSize = 10;\r\n\r\n  useEffect(() => {\r\n    // Veritabanından oyuncu verilerini çekiyoruz\r\n    const fetchPlayers = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          `/api/players?page=${currentPage}&limit=${playersPerPage}`\r\n        ); // Backend'de pagination endpoint\r\n        setPlayers(response.data.players); // players array'i backend'den gelen veri\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching players:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPlayers();\r\n  }, [currentPage]);\r\n\r\n  const totalPages = Math.ceil(8000 / playersPerPage); // Toplam sayfa sayısı\r\n\r\n  // Sayfa değiştirildiğinde yapılacaklar\r\n  const paginate = (pageNumber) => {\r\n    if (pageNumber > 0 && pageNumber <= totalPages) setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const currentPaginationGroup = Math.floor((currentPage - 1) / paginationGroupSize);\r\n  const startPage = currentPaginationGroup * paginationGroupSize + 1;\r\n  const endPage = Math.min(startPage + paginationGroupSize - 1, totalPages);\r\n\r\n  const goToPreviousGroup = () => {\r\n    const previousGroupStart = startPage - paginationGroupSize;\r\n    if (previousGroupStart > 0) {\r\n      setCurrentPage(previousGroupStart);\r\n    }\r\n  };\r\n\r\n  const goToNextGroup = () => {\r\n    const nextGroupStart = startPage + paginationGroupSize;\r\n    if (nextGroupStart <= totalPages) {\r\n      setCurrentPage(nextGroupStart);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading players...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"players-page\">\r\n      <aside className=\"players-sidebar\">\r\n        <h2>Filters</h2>\r\n        <div className=\"filter-group\">\r\n          <label>Name</label>\r\n          <input type=\"text\" placeholder=\"Name\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Club</label>\r\n          <input type=\"text\" placeholder=\"Club\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>Nationality</label>\r\n          <input type=\"text\" placeholder=\"Nationality\" />\r\n        </div>\r\n        <div className=\"filter-group\">\r\n          <label>League</label>\r\n          <input type=\"text\" placeholder=\"League\" />\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"players-list\">\r\n        <h1>Players</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Photo</th>\r\n              <th>Name</th>\r\n              <th>Club</th>\r\n              <th>Position</th>\r\n              <th>Rating</th>\r\n              <th>Wage</th>\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {players.map((player) => (\r\n              <tr key={player.id}>\r\n                <td>\r\n                  {player.image ? (\r\n                    <img\r\n                      src={player.image}\r\n                      alt={player.name}\r\n                      className=\"player-photo\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"placeholder-photo\">No Image</div>\r\n                  )}\r\n                </td>\r\n                <td>{player.name}</td>\r\n                <td>{player.club}</td>\r\n                <td>{player.position}</td>\r\n                <td>{player.rating}</td>\r\n                <td>{player.wage}</td>\r\n                <td>{player.contractUntil}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToPreviousGroup}\r\n            disabled={currentPage <= paginationGroupSize}\r\n          >\r\n            &lt;&lt;\r\n          </button>\r\n\r\n          {Array.from({ length: endPage - startPage + 1 }, (_, i) => {\r\n            const pageNumber = startPage + i;\r\n            return (\r\n              <button\r\n                key={pageNumber}\r\n                className={`pagination-btn ${\r\n                  currentPage === pageNumber ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => paginate(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            );\r\n          })}\r\n\r\n          <button\r\n            className=\"pagination-btn\"\r\n            onClick={goToNextGroup}\r\n            disabled={startPage + paginationGroupSize > totalPages}\r\n          >\r\n            &gt;&gt;\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}